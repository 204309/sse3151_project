///editProfile/////////////////////////
// import 'package:SSE3151_project/services/database.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:flutter/material.dart';
// import 'package:google_fonts/google_fonts.dart';
// import 'package:provider/provider.dart';

// class editProfile extends StatefulWidget {
//   const editProfile({Key? key}) : super(key: key);

//   @override
//   _editProfileState createState() => _editProfileState();
// }

// class _editProfileState extends State<editProfile> {
//   final _formKey = GlobalKey<FormState>();
//   // final user = FirebaseAuth.instance.currentUser!;

//   @override
//   Widget build(BuildContext context) {
//     final user = Provider.of<User?>(context);
//     return StreamBuilder<Object>(
//         stream: DatabaseService(uid: user!.uid).userData,
//         builder: (context, snapshot) {
//           return Scaffold(
//             extendBodyBehindAppBar: true,
//             appBar: AppBar(
//               elevation: 0,
//               backgroundColor: Colors.transparent,
//               title: Text("Edit Profile",
//                   style: GoogleFonts.poppins(
//                       fontSize: 25, fontWeight: FontWeight.w600)),
//               centerTitle: true,
//               leading: IconButton(
//                   icon: Icon(Icons.arrow_back, color: Colors.black),
//                   onPressed: () => Navigator.pop(context)),
//               actions: [
//                 TextButton(
//                     onPressed: () {
//                       //need to be fix: if user using google & if user using normal email
//                       // final provider =
//                       //     Provider.of<GoogleSignInProvider>(context, listen: false);
//                       // provider.logout();
//                       FirebaseAuth.instance.signOut();
//                     },
//                     child: Image.asset(
//                       'assets/images/logoutIcon.png',
//                       scale: 20,
//                     )),
//               ],
//             ),
//             body: Container(
//               decoration: BoxDecoration(
//                 gradient: LinearGradient(
//                     colors: [
//                       Colors.indigoAccent,
//                       Colors.blue.shade200,
//                       Colors.white
//                     ],
//                     // stops: [0.2, 0.8, 1],
//                     begin: Alignment.topCenter,
//                     end: Alignment.bottomCenter),
//               ),
//               alignment: Alignment.center,
//               child: Column(
//                 mainAxisAlignment: MainAxisAlignment.center,
//                 children: [
//                   CircleAvatar(
//                     radius: 40,
//                     backgroundImage: NetworkImage(user.photoURL!),
//                   ),
//                   SizedBox(height: 8),
//                   Padding(
//                     padding: EdgeInsets.symmetric(horizontal: 30, vertical: 10),
//                     child: TextFormField(
//                       initialValue: user.displayName!,
//                       style: TextStyle(fontSize: 16),
//                       decoration: InputDecoration(border: OutlineInputBorder()),
//                     ),
//                   ),

//                   SizedBox(height: 8),
//                   Text(
//                     'Email: ' + user.email!,
//                     style: TextStyle(fontSize: 16),
//                   ),
//                   //phone number is not available for those who sign in through google.
//                   //so, we need the profile that can be edited to update their phone number

//                   SizedBox(height: 8),
//                   Padding(
//                     padding: const EdgeInsets.symmetric(
//                         horizontal: 30, vertical: 10),
//                     child: Container(
//                       decoration: BoxDecoration(
//                         color: Colors.white70,
//                         borderRadius: new BorderRadius.circular(10.0),
//                       ),
//                       // child: Padding(
//                       //   padding: EdgeInsets.symmetric(horizontal: 30, vertical: 10),
//                       child: TextFormField(
//                         initialValue: user.displayName!,
//                         style: TextStyle(fontSize: 16),
//                         decoration: InputDecoration(
//                           border: OutlineInputBorder(),
//                           fillColor: Colors.white,
//                         ),
//                       ),
//                     ),
//                   ),
//                   // ),
//                 ],
//               ),
//             ),
//           );
//         });
//   }

//   Future editProfile() async {
//     User user = FirebaseAuth.instance.currentUser!;

//     await FirebaseFirestore.instance.collection("users").doc(user.uid).set({
//       'uid': user.uid,
//       'fullName': user.displayName,
//       'id': '',
//       'email': user.email,
//       'phoneNumber': '',
//     });
//   }
// }


// /////////profile.dart/////////////////////
// ///
// import 'package:SSE3151_project/login.dart';
// import 'package:SSE3151_project/provider/googleSignIn.dart';
// import 'package:SSE3151_project/services/database.dart';
// import 'package:SSE3151_project/student/DashboardStudent.dart';
// import 'package:SSE3151_project/student/editProfile.dart';
// import 'package:SSE3151_project/student_user.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:google_fonts/google_fonts.dart';
// import 'package:flutter/material.dart';
// import 'package:provider/provider.dart';

// //trial test to see whether the details from google profile can be retrieve or not
// //Result: Success! but only available for google user
// //Feel free to change the UI :)

// class Student_Profile extends StatelessWidget {
//   final UserDisplay users;
//   Student_Profile({Key? key, required this.users}) : super(key: key);
//   final user = FirebaseAuth.instance.currentUser!;

//   @override
//   Widget build(BuildContext context) {
//     final user = Provider.of<List<UserDisplay>?>(context);

//     Size size = MediaQuery.of(context).size;

//     return StreamProvider<List<UserDisplay>?>.value(
//       value: DatabaseService(uid: '').users,
//       initialData: null,
//       child: Scaffold(
//         extendBodyBehindAppBar: true,
//         appBar: AppBar(
//           elevation: 0,
//           backgroundColor: Colors.transparent,
//           title: Text("Profile",
//               style: GoogleFonts.poppins(
//                   fontSize: 25, fontWeight: FontWeight.w600)),
//           centerTitle: true,
//           leading: IconButton(
//             icon: Icon(Icons.arrow_back, color: Colors.black),
//             onPressed: () => Navigator.push(context,
//                 MaterialPageRoute(builder: (context) => dashboardStudent())),
//           ),
//           actions: [
//             TextButton(
//                 onPressed: () {
//                   //need to be fix: if user using google & if user using normal email
//                   // final provider =
//                   //     Provider.of<GoogleSignInProvider>(context, listen: false);
//                   // provider.logout();
//                   FirebaseAuth.instance.signOut();
//                 },
//                 child: Image.asset(
//                   'assets/images/logoutIcon.png',
//                   scale: 20,
//                 )),
//           ],
//         ),
//         body: Container(
//           decoration: BoxDecoration(
//             gradient: LinearGradient(
//                 colors: [
//                   Colors.indigoAccent,
//                   Colors.blue.shade200,
//                   Colors.white
//                 ],
//                 // stops: [0.2, 0.8, 1],
//                 begin: Alignment.topCenter,
//                 end: Alignment.bottomCenter),
//           ),
//           alignment: Alignment.center,
//           child: Column(
//             mainAxisAlignment: MainAxisAlignment.center,
//             children: [
//               CircleAvatar(
//                 radius: 40,
//                 // backgroundImage: NetworkImage(user.photoURL!),
//               ),
//               SizedBox(height: 8),
//               Text(
//                 'Name: ' + users.name,
//                 style: TextStyle(fontSize: 16),
//               ),
//               SizedBox(height: 8),
//               Text(
//                 'Email: ' + users.email,
//                 style: TextStyle(fontSize: 16),
//               ),
//               //phone number is not available for those who sign in through google.
//               //so, we need the profile that can be edited to update their phone number
//               SizedBox(height: 8),
//               ElevatedButton(
//                 onPressed: () {
//                   Navigator.push(context,
//                       MaterialPageRoute(builder: (context) => editProfile()));
//                 },
//                 style: ButtonStyle(
//                     padding: MaterialStateProperty.all(EdgeInsets.all(0)),
//                     shape: MaterialStateProperty.all<RoundedRectangleBorder>(
//                         RoundedRectangleBorder(
//                       borderRadius: BorderRadius.circular(80.0),
//                     ))),
//                 child: Container(
//                   alignment: Alignment.center,
//                   height: 50.0,
//                   width: size.width * 0.5,
//                   decoration: new BoxDecoration(
//                       borderRadius: BorderRadius.circular(80.0),
//                       gradient: new LinearGradient(colors: [
//                         Color.fromARGB(255, 255, 136, 34),
//                         Color.fromARGB(255, 255, 177, 41)
//                       ])),
//                   padding: const EdgeInsets.all(0),
//                   child: Text(
//                     "Edit Profile",
//                     textAlign: TextAlign.center,
//                     style: TextStyle(fontWeight: FontWeight.bold),
//                   ),
//                 ),
//               ),
//             ],
//           ),
//         ),
//       ),
//     );
//   }

//   // Future editProfile() async {
//   //   User user = FirebaseAuth.instance.currentUser!;

//   //     await FirebaseFirestore.instance.collection("users").doc(user.uid).set({
//   //       'uid': user.uid,
//   //       'fullName': user.displayName,
//   //       'id': '',
//   //       'email': user.email,
//   //       'phoneNumber': '',
//   //     });
//   // }
// }

// ///////////////////profile.dart that have list tile/////////////////////

// import 'package:SSE3151_project/login.dart';
// import 'package:SSE3151_project/provider/googleSignIn.dart';
// import 'package:SSE3151_project/student/DashboardStudent.dart';
// import 'package:SSE3151_project/student/editProfile.dart';
// import 'package:cloud_firestore/cloud_firestore.dart';
// import 'package:firebase_auth/firebase_auth.dart';
// import 'package:google_fonts/google_fonts.dart';
// import 'package:flutter/material.dart';
// import 'package:provider/provider.dart';

// //trial test to see whether the details from google profile can be retrieve or not
// //Result: Success! but only available for google user
// //Feel free to change the UI :)
// //var userD = FirebaseFirestore.instance.collection('users').doc("uid").get();
// class Student_Profile extends StatelessWidget {
//   Student_Profile({Key? key}) : super(key: key);

//   final user = FirebaseAuth.instance.currentUser!;

//   @override
//   Widget build(BuildContext context) {
//     var userD = FirebaseFirestore.instance.collection('users').doc("uid").get();
//     Size size = MediaQuery.of(context).size;
//     return Scaffold(
//       extendBodyBehindAppBar: true,
//       appBar: AppBar(
//         elevation: 0,
//         backgroundColor: Colors.transparent,
//         title: Text("Profile",
//             style:
//                 GoogleFonts.poppins(fontSize: 25, fontWeight: FontWeight.w600)),
//         centerTitle: true,
//         leading: IconButton(
//           icon: Icon(Icons.arrow_back, color: Colors.black),
//           onPressed: () => Navigator.push(context,
//               MaterialPageRoute(builder: (context) => dashboardStudent())),
//         ),
//         actions: [
//           TextButton(
//               onPressed: () {
//                 //need to be fix: if user using google & if user using normal email
//                 // final provider =
//                 //     Provider.of<GoogleSignInProvider>(context, listen: false);
//                 // provider.logout();
//                 FirebaseAuth.instance.signOut();
//               },
//               child: Image.asset(
//                 'assets/images/logoutIcon.png',
//                 scale: 20,
//               )),
//         ],
//       ),
//       body: StreamBuilder<QuerySnapshot>(
//           stream: FirebaseFirestore.instance.collection('users').snapshots(),
//           builder: (context, snapshot) {
//             return !snapshot.hasData
//                 ? Center(
//                     child: CircularProgressIndicator(),
//                   )
//                 : Container(
//                     decoration: BoxDecoration(
//                       gradient: LinearGradient(
//                           colors: [
//                             Colors.indigoAccent,
//                             Colors.blue.shade200,
//                             Colors.white
//                           ],
//                           // stops: [0.2, 0.8, 1],
//                           begin: Alignment.topCenter,
//                           end: Alignment.bottomCenter),
//                     ),
//                     alignment: Alignment.center,
//                     child: ListView.builder(
//                         itemCount: snapshot.data?.docs.length,
//                         itemBuilder: (context, uid) {
//                           return Card(
//                             child: ListTile(
//                               subtitle: Column(
//                                 mainAxisAlignment: MainAxisAlignment.center,
//                                 children: [
//                                   CircleAvatar(
//                                     radius: 40,
//                                     backgroundImage:
//                                         NetworkImage(user.photoURL!),
//                                   ),
//                                   SizedBox(height: 8),
//                                   Text(
//                                     'Nasme: ' +
//                                         snapshot.data!.docs[uid]
//                                             .get('fullName'),
//                                     style: TextStyle(fontSize: 16),
//                                   ),
//                                   Text(
//                                     'Name: ' + user.displayName!,
//                                     style: TextStyle(fontSize: 16),
//                                   ),
//                                   SizedBox(height: 8),
//                                   Text(
//                                     'Email: ' + user.email!,
//                                     style: TextStyle(fontSize: 16),
//                                   ),
//                                   //phone number is not available for those who sign in through google.
//                                   //so, we need the profile that can be edited to update their phone number
//                                   SizedBox(height: 8),
//                                   ElevatedButton(
//                                     onPressed: () {
//                                       Navigator.push(
//                                           context,
//                                           MaterialPageRoute(
//                                               builder: (context) =>
//                                                   editProfile()));
//                                     },
//                                     style: ButtonStyle(
//                                         padding: MaterialStateProperty.all(
//                                             EdgeInsets.all(0)),
//                                         shape: MaterialStateProperty.all<
//                                                 RoundedRectangleBorder>(
//                                             RoundedRectangleBorder(
//                                           borderRadius:
//                                               BorderRadius.circular(80.0),
//                                         ))),
//                                     child: Container(
//                                       alignment: Alignment.center,
//                                       height: 50.0,
//                                       width: size.width * 0.5,
//                                       decoration: new BoxDecoration(
//                                           borderRadius:
//                                               BorderRadius.circular(80.0),
//                                           gradient: new LinearGradient(colors: [
//                                             Color.fromARGB(255, 255, 136, 34),
//                                             Color.fromARGB(255, 255, 177, 41)
//                                           ])),
//                                       padding: const EdgeInsets.all(0),
//                                       child: Text(
//                                         "Edit Profile",
//                                         textAlign: TextAlign.center,
//                                         style: TextStyle(
//                                             fontWeight: FontWeight.bold),
//                                       ),
//                                     ),
//                                   ),
//                                 ],
//                               ),
//                             ),
//                           );
//                         }),
//                   );
//           }),
//     );
//   }

//   // Future editProfile() async {
//   //   User user = FirebaseAuth.instance.currentUser!;

//   //     await FirebaseFirestore.instance.collection("users").doc(user.uid).set({
//   //       'uid': user.uid,
//   //       'fullName': user.displayName,
//   //       'id': '',
//   //       'email': user.email,
//   //       'phoneNumber': '',
//   //     });
//   // }
// }


// /////////////////////////register //////////////////////////////////////
//  child: Column(
//                       children: [
//                         Container(
//                           alignment: Alignment.center,
//                           margin: EdgeInsets.symmetric(horizontal: 40),
//                           child: TextFormField(
//                             controller: FNCtrl,
//                             decoration: InputDecoration(labelText: "Full Name"),
//                             autovalidateMode:
//                                 AutovalidateMode.onUserInteraction,
//                             validator: (fullName) =>
//                                 fullName != null && fullName.length < 6
//                                     ? 'Enter a full name'
//                                     : null,
//                           ),
//                         ),
//                         SizedBox(height: size.height * 0.03),
//                         Container(
//                           alignment: Alignment.center,
//                           margin: EdgeInsets.symmetric(horizontal: 40),
//                           child: TextFormField(
//                             controller: MIDCtrl,
//                             decoration: InputDecoration(labelText: "Matric ID"),
//                             autovalidateMode:
//                                 AutovalidateMode.onUserInteraction,
//                             validator: (id) => id != null && id.length < 6
//                                 ? 'Enter UPM-ID'
//                                 : null,
//                           ),
//                         ),
//                         SizedBox(height: size.height * 0.03),
//                         Container(
//                           alignment: Alignment.center,
//                           margin: EdgeInsets.symmetric(horizontal: 40),
//                           child: TextFormField(
//                             controller: emailCtrl,
//                             decoration:
//                                 InputDecoration(labelText: "Email address"),
//                             autovalidateMode:
//                                 AutovalidateMode.onUserInteraction,
//                             validator: (email) =>
//                                 email != null && !EmailValidator.validate(email)
//                                     ? 'Enter a valid email'
//                                     : null,
//                           ),
//                         ),
//                         SizedBox(height: size.height * 0.03),
//                         Container(
//                           alignment: Alignment.center,
//                           margin: EdgeInsets.symmetric(horizontal: 40),
//                           child: TextFormField(
//                             controller: PNCtrl,
//                             decoration:
//                                 InputDecoration(labelText: "Mobile number"),
//                             autovalidateMode:
//                                 AutovalidateMode.onUserInteraction,
//                             validator: (phoneNumber) =>
//                                 phoneNumber != null && phoneNumber.length < 10
//                                     ? 'Enter a phone number'
//                                     : null,
//                           ),
//                         ),
//                         SizedBox(height: size.height * 0.03),
//                         Container(
//                           alignment: Alignment.center,
//                           margin: EdgeInsets.symmetric(horizontal: 40),
//                           child: TextFormField(
//                             controller: passwordCtrl,
//                             decoration: InputDecoration(labelText: "Password"),
//                             obscureText: true,
//                             autovalidateMode:
//                                 AutovalidateMode.onUserInteraction,
//                             validator: (password) =>
//                                 password != null && password.length < 8
//                                     ? 'Enter min. 8 characters'
//                                     : null,
//                           ),
//                         ),
//                         SizedBox(height: size.height * 0.05),
//                         Container(
//                           alignment: Alignment.centerRight,
//                           margin: EdgeInsets.symmetric(
//                               horizontal: 40, vertical: 10),
//                           child: ElevatedButton(
//                             onPressed: () {
//                               signUp();
//                             },
//                             style: ButtonStyle(
//                                 padding: MaterialStateProperty.all(
//                                     EdgeInsets.all(0)),
//                                 shape: MaterialStateProperty.all<
//                                         RoundedRectangleBorder>(
//                                     RoundedRectangleBorder(
//                                   borderRadius: BorderRadius.circular(80.0),
//                                 ))),
//                             child: Container(
//                               alignment: Alignment.center,
//                               height: 50.0,
//                               width: size.width * 0.5,
//                               decoration: new BoxDecoration(
//                                   borderRadius: BorderRadius.circular(80.0),
//                                   gradient: new LinearGradient(colors: [
//                                     Color.fromARGB(255, 255, 136, 34),
//                                     Color.fromARGB(255, 255, 177, 41)
//                                   ])),
//                               padding: const EdgeInsets.all(0),
//                               child: Text(
//                                 "SIGN UP",
//                                 textAlign: TextAlign.center,
//                                 style: TextStyle(fontWeight: FontWeight.bold),
//                               ),
//                             ),
//                           ),
//                         ),
//                       ],
//                     ),

//////////editprofile//////////////////
 final _formKey = GlobalKey<FormState>();

  //controller
  final FNCtrl = TextEditingController();
  final MIDCtrl = TextEditingController();
  final semCtrl = TextEditingController();
  final PNCtrl = TextEditingController();
  final emailCtrl = TextEditingController();
  final wcCtrl = TextEditingController();
  final passwordCtrl = TextEditingController();

  final user = FirebaseAuth.instance.currentUser!;

  String? image;
  String? name;
  String? UPMID;
  String? semester;
  String? faculty;
  String? email;
  String? wechat;
  String? password;
  String? phoneNumber;

  String? currentName;
  String? currentUPMID;
  String? currentSemester;
  String? currentFaculty;
  String? currentEmail;
  String? currentWechat;
  String? currentPassword;
  String? currentPhoneNumber;

  void setVariable() {
    name = FNCtrl.text;
    UPMID = MIDCtrl.text;
    semester = semCtrl.text;
    // faculty = ;
    email = emailCtrl.text;
    wechat = wcCtrl.text;
    password = passwordCtrl.text;
    phoneNumber = PNCtrl.text;
  }

  Future getStudentData() async {
    final studentInfo = await FirebaseFirestore.instance
        .collection('students')
        .doc(user.uid)
        .get();

    if (mounted) {
      setState(() {
        image = studentInfo.get('image');
        currentName = studentInfo.get('fullName');
        currentUPMID = studentInfo.get('upmid');
        currentSemester = studentInfo.get('semester');
        currentFaculty = studentInfo.get('faculty');
        currentEmail = studentInfo.get('email');
        currentWechat = studentInfo.get('wechat');
        currentPassword = studentInfo.get('password');
        currentPhoneNumber = studentInfo.get('phoneNumber');
      });
    }

    // image = studentInfo.data()!['image'];
    // currentName = studentInfo.data()!['fullName'];
    // currentUPMID = studentInfo.data()!['upmid'];
    // currentSemester = studentInfo.data()!['semester'];
    // currentFaculty = studentInfo.data()!['faculty'];
    // currentEmail = studentInfo.data()!['email'];
    // currentWechat = studentInfo.data()!['wechat'];
    // currentPassword = studentInfo.data()!['password'];
    // currentPhoneNumber = studentInfo.data()!['phoneNumber'];

    FNCtrl.text = currentName!;
    MIDCtrl.text = currentUPMID!;
    semCtrl.text = currentSemester!;
    PNCtrl.text = currentPhoneNumber!;
    emailCtrl.text = currentEmail!;
    wcCtrl.text = currentWechat!;
    passwordCtrl.text = currentPassword!;

    print('getting...');
  }

  studentUser? student = snapshot.data;

  body: Container(
        decoration: BoxDecoration(
          gradient: LinearGradient(
              colors: [Colors.indigoAccent, Colors.blue.shade200, Colors.white],
              // stops: [0.2, 0.8, 1],
              begin: Alignment.topCenter,
              end: Alignment.bottomCenter),
        ),
        alignment: Alignment.center,
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            CircleAvatar(
              radius: 40,
              backgroundImage: NetworkImage(image ??
                  'https://firebasestorage.googleapis.com/v0/b/padvisor-45b73.appspot.com/o/default2_stdicon.jpg?alt=media&token=2e4518de-036f-47b6-9010-23588e9a6fe4'),
            ),
            SizedBox(height: 8),
            Text(
              'Name: ',
              style: TextStyle(fontSize: 16),
            ),
            TextFormField(
              initialValue: student?.name,
              decoration: textInputDecoration,
              validator: (val) => val!.isEmpty ? 'Please enter a name' : null,
              onChanged: (val) => setState(() {
                currentName = val;
              }),
            ),
            // Padding(
            //   padding:
            //       EdgeInsets.symmetric(horizontal: 30, vertical: 10),
            //   child: TextFormField(
            //     initialValue: user.displayName!,
            //     style: TextStyle(fontSize: 16),
            //     decoration:
            //         InputDecoration(border: OutlineInputBorder()),
            //   ),
            // ),

            // SizedBox(height: 8),
            // Text(
            //   'Email: ' + user.email!,
            //   style: TextStyle(fontSize: 16),
            // ),
            // //phone number is not available for those who sign in through google.
            // //so, we need the profile that can be edited to update their phone number

            // SizedBox(height: 8),
            // Padding(
            //   padding: const EdgeInsets.symmetric(
            //       horizontal: 30, vertical: 10),
            //   child: Container(
            //     decoration: BoxDecoration(
            //       color: Colors.white70,
            //       borderRadius: new BorderRadius.circular(10.0),
            //     ),
            //     // child: Padding(
            //     //   padding: EdgeInsets.symmetric(horizontal: 30, vertical: 10),
            //     child: TextFormField(
            //       initialValue: user.displayName!,
            //       style: TextStyle(fontSize: 16),
            //       decoration: InputDecoration(
            //         border: OutlineInputBorder(),
            //         fillColor: Colors.white,
            //       ),
            //     ),
            //   ),
            // ),
            // ),
          ],
        ),
      ),

      /////////////////////////
       Future editProfile() async {
    final isValid = formKey.currentState!.validate();
    if (!isValid) return;

    name = FNCtrl.text.trim();
    UPMID = MIDCtrl.text.trim();
    // final String semester = semCtrl.text;
    // final String faculty = _faculty!;
    // final String email = emailCtrl.text.trim();
    // final String phoneNumber = PNCtrl.text.trim();
    // final String wechat = wcCtrl.text.trim();
    // final String password = passwordCtrl.text.trim();

    User user = FirebaseAuth.instance.currentUser!;

    await FirebaseFirestore.instance.collection("users").doc(user.uid).update({
      'fullName': name,
      'upmid': UPMID,
      // 'email': email,
      // 'phoneNumber': '',
    });

    Navigator.pop(context);
  }


  ///// announcement /// 
  ///
  import 'package:SSE3151_project/PA/AdviseeList.dart';
import 'package:SSE3151_project/PA/addAdvisee.dart';
import 'package:SSE3151_project/PA/addPost.dart';
import 'package:SSE3151_project/PA/profile.dart';
import 'package:SSE3151_project/background2.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:flutter/material.dart';
import '../services/menu_item.dart';
import '../services/menu_lists.dart';
import '../student/loginPage.dart';

class dashboardPA extends StatelessWidget {
  const dashboardPA({Key? key}) : super(key: key);

  final text =
      'random-words generates random words for use as sample text. We use it to generate random blog posts when testing Apostrophe.'
      'Cryptographic-quality randomness is NOT the goal, as speed matters for generating sample text and security does not. Math.random() is used.';
  // Stream<QuerySnapshot> get listOfPost {
  //   final CollectionReference postColl = FirebaseFirestore.instance
  //       .collection('Announcement')
  //       .doc('Posts')
  //       .collection('Announcement Lists');
  //   return postColl.snapshots();
  // }

  @override
  Widget build(BuildContext context) {
    // final user = FirebaseAuth.instance.currentUser;
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.indigo,
        automaticallyImplyLeading: false,
        title: Text(
          "Dashboard",
          style: TextStyle(color: Colors.white),
        ),
        centerTitle: true,
        actions: [
          PopupMenuButton<MenuItem>(
            onSelected: (item) => onSelected(context, item),
            itemBuilder: (context) => [
              ...MenuLists.itemPALists.map(buildItem).toList(),
              PopupMenuDivider(),
              ...MenuLists.itemSecList.map(buildItem).toList(),
            ],
            color: Colors.white,
            // icon: new Icon(Icons.add, color: Colors.amber),
          ),
        ],
      ),
      body: Background2(
        child:
            // postList(context, snapshot),
            Card(
          margin: EdgeInsets.all(20),
          child: SingleChildScrollView(
            child: new StreamBuilder<QuerySnapshot>(
                stream: FirebaseFirestore.instance
                    .collection('Announcement')
                    .doc('Posts')
                    .collection('Announcement Lists')
                    .snapshots(),
                builder: (context, snapshot) {
                  return 
                  Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: <Widget>[
                      Container(
                        alignment: Alignment.centerLeft,
                        padding: EdgeInsets.symmetric(horizontal: 30),
                        child: Text(
                          "s",
                          style: TextStyle(
                              fontWeight: FontWeight.bold,
                              color: Color(0xFF2661FA),
                              fontSize: 36),
                          textAlign: TextAlign.left,
                        ),
                      ),
                      SizedBox(height: 10),
                      //add posted announcment here
                      Card(
                        elevation: 10,
                        child: Container(
                          width: 300,
                          padding: EdgeInsets.all(20),
                          margin: EdgeInsets.all(5),
                          decoration: BoxDecoration(
                            color: Colors.white60,
                          ),
                          child: Expanded(child: postList(context, snapshot)),
                        ),
                      ),

                      Card(
                        elevation: 10,
                        child: Container(
                          // height: 400,
                          width: 300,
                          padding: EdgeInsets.all(20),
                          margin: EdgeInsets.all(5),
                          decoration: BoxDecoration(
                            color: Colors.white60,
                          ),
                          child: Column(
                            // mainAxisAlignment: MainAxisAlignment.spaceAround,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              // Container(
                              //   padding: EdgeInsets.symmetric(
                              //     vertical: 10,
                              //     horizontal: 5,
                              //   ),
                              //   color: Colors.red[20],
                              //   child: Text(
                              //     'Assignment1',
                              //     style: TextStyle(
                              //       fontWeight: FontWeight.bold,
                              //       fontStyle: FontStyle.italic,
                              //       fontSize: 20,
                              //     ),
                              //   ),
                              // ),
                              // SizedBox(height: 30),
                              // Container(
                              //   child: Text(
                              //     '$text',
                              //     style: TextStyle(
                              //       fontSize: 16,
                              //     ),
                              //   ),
                              // ),
                            ],
                          ),
                        ),
                      ),
                      Card(
                        elevation: 10,
                        child: Container(
                          width: 300,
                          padding: EdgeInsets.all(20),
                          margin: EdgeInsets.all(5),
                          decoration: BoxDecoration(
                            color: Colors.white60,
                          ),
                          child: Column(
                            // mainAxisAlignment: MainAxisAlignment.spaceAround,
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Container(
                                padding: EdgeInsets.symmetric(
                                  vertical: 10,
                                  horizontal: 5,
                                ),
                                color: Colors.red[20],
                                child: Text(
                                  'Assignment1',
                                  style: TextStyle(
                                    fontWeight: FontWeight.bold,
                                    fontStyle: FontStyle.italic,
                                    fontSize: 20,
                                  ),
                                ),
                              ),
                              SizedBox(height: 30),
                              Container(
                                child: Text(
                                  '$text',
                                  style: TextStyle(
                                    fontSize: 16,
                                  ),
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                      SizedBox(height: 30),
                    ],
                  );
                }),
          ),
        ),
      ),
      floatingActionButtonLocation: FloatingActionButtonLocation.endFloat,
      floatingActionButton: FloatingActionButton(
        child: Container(
          width: 60,
          height: 60,
          child: Icon(
            Icons.add,
            size: 40,
          ),
          decoration: new BoxDecoration(
              shape: BoxShape.circle,
              gradient: new LinearGradient(colors: [
                Color.fromARGB(255, 255, 136, 34),
                Color.fromARGB(255, 255, 177, 41)
              ])),
        ),
        onPressed: () {
          Navigator.of(context)
              .push(MaterialPageRoute(builder: (context) => addPost()));
        },
      ),
    );
  }

  PopupMenuItem<MenuItem> buildItem(MenuItem item) {
    return PopupMenuItem<MenuItem>(
      value: item,
      child: Row(
        children: [
          Icon(
            item.icon,
            color: Colors.black,
            size: 25,
          ),
          const SizedBox(
            width: 12,
          ),
          Text(item.text),
        ],
      ),
    );
  }

  void onSelected(BuildContext context, MenuItem item) {
    switch (item) {
      case MenuLists.itemProfile:
        Navigator.of(context).push(
          MaterialPageRoute(builder: (context) => PA_Profile()),
        );
        break;
      case MenuLists.itemAdvisee:
        Navigator.of(context).push(
          MaterialPageRoute(builder: (context) => adviseeList()),
        );
        break;
      case MenuLists.itemLogOut:
        FirebaseAuth.instance.signOut();
        Navigator.of(context).pushAndRemoveUntil(
          MaterialPageRoute(builder: (context) => LoginWidget()),
          (route) => false,
        );
        break;
      default:
    }
  }

  Future getPostList() async {
    await FirebaseFirestore.instance
        .collection('Announcement')
        .doc('Post')
        .collection('Announcement Lists')
        .orderBy("index", descending: true)
        .get()
        .then((snapshot) => snapshot.docs.forEach((value) {
              postDetails(value["postTile"], value["postContent"]);
            }));
  }
}

Widget postList(BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
  return Card(
    elevation: 10,
    child: Container(
      width: 300,
      padding: EdgeInsets.all(20),
      margin: EdgeInsets.all(5),
      decoration: BoxDecoration(
        color: Colors.white60,
      ),
      child: postDetails(context, snapshot),
    ),
  );
}

Widget postDetails(
    BuildContext context, AsyncSnapshot<QuerySnapshot> snapshot) {
  final postList = snapshot.data!.docs.toList();
  return ListView.builder(
      itemCount: postList.length,
      itemBuilder: ((context, index) {
        return Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Container(
              padding: EdgeInsets.symmetric(
                vertical: 10,
                horizontal: 5,
              ),
              child: Text(
                postList[index]['postTitle'].toString(),
                style: TextStyle(
                  fontWeight: FontWeight.bold,
                  fontStyle: FontStyle.italic,
                  fontSize: 20,
                ),
              ),
            ),
            SizedBox(height: 26),
            Container(
              child: Text(
                postList[index]['postContent'].toString(),
                style: TextStyle(
                  fontSize: 16,
                ),
              ),
            ),
            SizedBox(height: 26),
          ],
        );
      }));
}
